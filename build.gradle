apply plugin: 'java'
apply plugin: 'idea'

task wrapper(type: Wrapper) {
	gradleVersion = '2.0'
	distributionUrl = "http://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}

allprojects {
	group = "com.complexible.common"
	sourceCompatibility = '1.8'
	targetCompatibility = '1.8'

	repositories {
		mavenCentral()
	}


}

ext {
	projectDescription	= "Complexible: OpenRdf Utility classes"
	projectUrl			= "https://github.com/mhgrove/cp-openrdf-utils"
	sesameRdf4jVersion = "2.2.2"
}

subprojects {
	apply plugin: "java"
	apply plugin: "maven"

	dependencies {
		compile 'org.slf4j:slf4j-api:1.7.7'
		compile 'org.slf4j:slf4j-jdk14:1.7.7'

		testCompile 'junit:junit:4.11'
	}

	sourceSets {
		main {
			java {
				srcDir 'main/src'
			}
			resources {
				srcDir 'main/resources'
			}
		}
		test {
			java {
				srcDir 'test/src'
			}
			resources {
				srcDir 'test/resources'
			}
		}
	}

	// create a 'tests' conf for importing test classes from other sub-projects
	task testJar(type: Jar, dependsOn: testClasses) {
		classifier = 'tests'
		from sourceSets.test.output
	}

	artifacts {
		testRuntime testJar // include the tests of other subprojects
	}

	apply from: "$rootDir/maven.gradle"
}

dependencies {
	compile project(":core")
}

evaluationDependsOnChildren()

task javadocs(type: Javadoc) {
	def core = project(":core")
	source core.sourceSets.main.allJava
	classpath = core.configurations.compile
	destinationDir = file("${rootProject.buildDir}/javadocs")
	options.addBooleanOption("nodeprecatedlist", false)
	options.addBooleanOption("nodeprecated", false)
	options.addStringOption('Xdoclint:none', '-quiet')
	configure(options) {
		windowTitle "${core.archivesBaseName}-${core.version} API"
		docTitle "${core.archivesBaseName}-${core.version}"
		bottom "Copyright &#169; 2010-2018 Complexible. All Rights Reserved."
		links "http://docs.oracle.com/javase/8/docs/api/",
			  "http://docs.guava-libraries.googlecode.com/git-history/v18.0/javadoc/",
			  "http://docs.rdf4j.org/javadoc/latest/"
	}
}
